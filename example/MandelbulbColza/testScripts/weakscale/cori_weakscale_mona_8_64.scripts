#!/bin/bash
#SBATCH --qos=debug
#SBATCH --nodes=3
#SBATCH --tasks-per-node=32
#SBATCH --time=10:00
#SBATCH --licenses=cscratch1
#SBATCH --constraint=haswell
#SBATCH --account=m3502

BUILDDIR=/global/cscratch1/sd/zw241/build_monavtk
SRCDIR=/global/homes/z/zw241/cworkspace/src/mona-vtk
SCRIPTPATH=$SRCDIR/example/MandelbulbColza/pipeline/mbrender_64_iso.py
CONFIG=$SRCDIR/example/MandelbulbColza/pipeline/monaconfig.json

BLOCKNUM=256
STEP=20
PROTOCOL=gni
SSGFILE=ssgfile
SWIMPERIOD=5000
BACKENDNAME=monabackend
BLOCKLEN=32

SERVERNODE=1
SERVERPROCESS=8

CLIENTNODE=2
CLIENTPROCESS=64

# run this in the build dir of the monavtk
cd $BUILDDIR

# copy script into current path
cp $SCRIPTPATH .

# 1 nodes for server (16*4=64=2*32)
srun -C haswell -N $SERVERNODE -n $SERVERPROCESS -c 8 -l --cpu_bind=cores --time=10:00 ./example/MandelbulbColza/mbserver -a $PROTOCOL -s $SSGFILE -c $CONFIG -t 1 -p $SWIMPERIOD &> mbserver_mona_$SERVERPROCESS.log &

#make sure the server load the pipeline
result=0
while [ $result -ne $SERVERPROCESS ]
do
    result=$(cat mbserver_mona_"$SERVERPROCESS".log | grep "Server running at" | wc -l)
    echo "$result server loaded backend"
    sleep 1  
done

# 16 nodes for client, 16*32=512, 512*8=4096 (maybe get this from the env, 2 hyperthread for one physical core)
srun -C haswell -N $CLIENTNODE -n $CLIENTPROCESS -c 2 -l --cpu_bind=cores --time=10:00 ./example/MandelbulbColza/mbclient -a $PROTOCOL -s $SSGFILE -p $BACKENDNAME -b $BLOCKNUM -t $STEP -w $BLOCKLEN -d $BLOCKLEN -e $BLOCKLEN &> mbclient_mona_${SERVERPROCESS}_${CLIENTPROCESS}.log
